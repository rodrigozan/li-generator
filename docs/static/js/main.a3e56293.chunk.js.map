{"version":3,"sources":["hooks/useForm.js","App.js","reportWebVitals.js","index.js"],"names":["useForm","useState","values","setValues","loading","setLoading","event","auxValues","target","name","value","callback","preventDefault","App","handleChange","handleSubmit","className","onSubmit","result","message","split","filter","linha","trim","map","li","i","join","element","ReactDOM","render","document","getElementById","onChange","placeholder","cols","rows","type","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"kOAwBeA,EAtBC,WAAO,IAAD,EAEQC,mBAAS,IAFjB,mBAEbC,EAFa,KAELC,EAFK,OAGUF,oBAAS,GAHnB,mBAGbG,EAHa,KAGJC,EAHI,KAkBpB,MAAO,CAAC,CAAEH,SAAQE,WAbG,SAACE,GACpB,IAAMC,EAAS,eAAQL,GACvBK,EAAUD,EAAME,OAAOC,MAAQH,EAAME,OAAOE,MAC5CP,EAAUI,IAGS,SAACI,GAAD,OAAc,SAACL,GAClCA,EAAMM,iBACNP,GAAW,GACXM,IACAN,GAAW,O,eCwCAQ,MAlDf,WAAgB,IAAD,EAE6Cb,IAF7C,0BAEJE,EAFI,EAEJA,OAAQE,EAFJ,EAEIA,QAAWU,EAFf,KAE6BC,EAF7B,KAyBb,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,gDAEF,kCACE,uBAAMC,SAAUF,GA3BP,WACb,IAGMG,EAHWhB,EAAOiB,QAAQC,MAAM,MACXC,QAAO,SAAAC,GAAK,OAAIA,EAAMC,UAC7BC,KAAI,SAACC,EAAIC,GAAL,sBAAoBD,EAApB,YACLE,KAAK,MAElBC,EACJ,gCACE,4DACA,gCACE,gCACE,6BACE,6BAAI,8BAAK,+CAAgBV,EAAhB,0BAMnBW,IAASC,OAAOF,EAASG,SAASC,eAAe,aAS7C,UACE,0BACEC,SAAUnB,EACVL,KAAK,UACLyB,YAAY,kBACZC,KAAK,KACLC,KAAK,OAEP,wBAAQC,KAAK,SAAb,SACGjC,EAAU,aAAe,kBAIhC,yBAASkC,GAAG,cCvCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdX,IAASC,OACP,cAAC,IAAMkB,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASC,eAAe,SAM1BO,M","file":"static/js/main.a3e56293.chunk.js","sourcesContent":["import { useState } from 'react';\n\nconst useForm = () => {\n\n  const [values, setValues] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const handleChange = (event) => {\n    const auxValues = { ...values }\n    auxValues[event.target.name] = event.target.value\n    setValues(auxValues)\n  }\n\n  const handleSubmit = (callback) => (event) => {\n    event.preventDefault()\n    setLoading(true)\n    callback()\n    setLoading(false)\n  }\n\n  return [{ values, loading }, handleChange, handleSubmit]\n\n}\n\nexport default useForm;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport useForm from './hooks/useForm'\n\nimport './App.css';\n\nfunction App() {\n\n  const [{ values, loading }, handleChange, handleSubmit] = useForm()\n\n  const listUl = () => {\n    const valueLis = values.message.split('\\n')\n    const lisNoTrim = valueLis.filter(linha => linha.trim())\n    let lis = lisNoTrim.map((li, i) => `\\t<li>${li}</li>`)\n    const result = lis.join('\\n')\n\n    const element = (\n      <div>\n        <h3>List starting successfully</h3>\n        <table>\n          <tbody>\n            <tr>\n              <td><pre><code>{`<ul>\\n${result}\\n</ul>`}</code></pre></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n    ReactDOM.render(element, document.getElementById('texto'));\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>li generator</h1>\n      </header>\n      <section>\n        <form onSubmit={handleSubmit(listUl)}>\n          <textarea\n            onChange={handleChange}\n            name=\"message\"\n            placeholder=\"Insert the list\"\n            cols=\"30\"\n            rows=\"10\"\n          ></textarea>\n          <button type=\"submit\">\n            {loading ? 'Process...' : 'Lets Go!'}\n          </button>\n        </form>\n      </section>\n      <section id=\"texto\"></section>\n    </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}